# Generated by Django 5.1.4 on 2025-04-07 09:20

import Members.models
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('username', models.CharField(default='user', max_length=150)),
                ('video_id', models.IntegerField(default=1)),
                ('video_name', models.CharField(max_length=150)),
                ('price', models.IntegerField(default='0')),
                ('cartegory', models.CharField(default='cartegory', max_length=150)),
                ('type', models.CharField(default='type', max_length=100)),
                ('season', models.CharField(default='full', max_length=100)),
                ('image_url', models.URLField(default='https://images.unsplash.com/photo-1604545200457-63641121af3b?w=400&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fGRhcmVkZXZpbHxlbnwwfHwwfHx8MA%3D%3D')),
            ],
            options={
                'db_table': 'cart',
            },
        ),
        migrations.CreateModel(
            name='DepositHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('amount', models.IntegerField()),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'deposit',
            },
        ),
        migrations.CreateModel(
            name='DownloadHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('video_id', models.IntegerField(default=1)),
                ('name', models.CharField(max_length=150)),
                ('video_name', models.CharField(max_length=150)),
                ('cost', models.CharField(default=0, max_length=150)),
                ('image_url', models.URLField(default='https://images.unsplash.com/photo-1604545200457-63641121af3b?w=400&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fGRhcmVkZXZpbHxlbnwwfHwwfHx8MA%3D%3D')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'downloads',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100)),
                ('message', models.TextField()),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('date_notified', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Onwatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('video_name', models.CharField(max_length=150)),
                ('video_id', models.IntegerField(default=1)),
                ('cost', models.CharField(default=0, max_length=150)),
                ('watcher', models.CharField(default='aga', max_length=150)),
                ('image_url', models.URLField(default='https://images.unsplash.com/photo-1604545200457-63641121af3b?w=400&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fGRhcmVkZXZpbHxlbnwwfHwwfHx8MA%3D%3D')),
            ],
            options={
                'db_table': 'watch',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150)),
                ('phone_number', models.CharField(max_length=150)),
                ('payment_Suc', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='Paymentcodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=150)),
                ('amount', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('buyerid', models.UUIDField(default=Members.models.generate_unique_id, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(default=Members.models.generate_unique_id, max_length=200)),
                ('account', models.IntegerField(default=0, verbose_name='account(Ksh)')),
                ('phone_number', models.IntegerField(default='0700000000')),
                ('country', models.CharField(default='Kenya', max_length=100)),
                ('city', models.CharField(default='mombasa', max_length=100)),
                ('profile_pic', models.ImageField(default='profile_pics/download.png', upload_to='profile_pics/')),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Purchased',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('video_id', models.IntegerField(default=1)),
                ('username', models.CharField(default='user', max_length=150)),
                ('video_name', models.CharField(max_length=150)),
                ('image_url', models.URLField(default='https://images.unsplash.com/photo-1604545200457-63641121af3b?w=400&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fGRhcmVkZXZpbHxlbnwwfHwwfHx8MA%3D%3D')),
                ('price', models.IntegerField()),
                ('purchase_time', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'purchased',
            },
        ),
        migrations.CreateModel(
            name='Errors',
            fields=[
                ('error_id', models.UUIDField(default=Members.models.generate_unique_id, primary_key=True, serialize=False)),
                ('error_details', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='Members.profile')),
            ],
        ),
        migrations.CreateModel(
            name='BettingRecords',
            fields=[
                ('bet_id', models.UUIDField(default=Members.models.generate_unique_id, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(default=uuid.UUID('9a323876-1391-11f0-ad23-5a95b00403cf'), max_length=150)),
                ('betting_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('win', models.IntegerField()),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='betting_record', to='Members.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Members',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(default=1812745, max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'members',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(default=False, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
    ]
