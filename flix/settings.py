"""
Django settings for flix project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hix_x=b28&3s3u#)y1_kvkjgyy$k_$(k*)^rjw8#2-y%sa=zl6'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost", "127.0.0.1","https://smooth-vast-thrush.ngrok-free.app/", 'smooth-vast-thrush.ngrok-free.app']
# ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split(" ")
CSRF_TRUSTED_ORIGINS = ["https://comic-finch-strongly.ngrok-free.app", 'https://smooth-vast-thrush.ngrok-free.app']
#CORS_ALLOW_CREDENTIALS = True
# Application definition

INSTALLED_APPS = [
    # 'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'api',
    'tailwind',
    'theme',
    'multimedia',
    'Members',
    'django_browser_reload',
    # 'compressor',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    "corsheaders",
    "django_filters",
    "storages",
    'rest_framework.authtoken',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django_browser_reload.middleware.BrowserReloadMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
 
ROOT_URLCONF = 'flix.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'flix.wsgi.application'
TAILWIND_APP_NAME = "theme"
AUTH_USER_MODEL = "Members.Members"
# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# if DEBUG:
DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': "flixshow",
            "USER": "aga",
            "PASSWORD":"Augustine@566",
            "HOST":"localhost",
            "PORT":""
        }
}
# else:
#     DATABASES = {
#        'default': {
#            'ENGINE': 'django.db.backends.postgresql_psycopg2',
#            'NAME': "kingstonemovies",
#            "USER": "kevin",
#            "PASSWORD":"12701522Rk",
#            "HOST":"localhost",
#            "PORT":""
#        }
#    }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# WEBPUSH_SETTINGS = {
#    "VAPID_PUBLIC_KEY": "BBYaa0FQmdfE8hPaLNvFtcREwg3Hfu2ALoBxu1NNxX-ETscM8F1RwxizbeCXfynpKkU831_D8IBsgAQtqCXFXP0",
#    "VAPID_PRIVATE_KEY": "iaFSdEjLkUVi-OBtTT5IaelzrWT3iKflXYxSr7ABNNA",
#    "VAPID_ADMIN_EMAIL": "aga.imbali1@gmail.com"
# }

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Static files configuration
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIR = [
    os.path.join(BASE_DIR, 'static')
]
STATIC_URL = 'static/'
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#####################################33333
STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
          "access_key": config('AWS_ACCESS_KEY_ID'),
          "secret_key": config('AWS_SECRET_ACCESS_KEY'),
          "bucket_name": config('AWS_STORAGE_BUCKET_NAME'),
          "endpoint_url": config('AWS_S3_ENDPOINT_URL'),
          'location': 'media',
          'default_acl': 'public-read',
          'custom_domain': config('AWS_S3_CUSTOM_DOMAIN'),
        },
    },
    "staticfiles": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
          "access_key": config('AWS_ACCESS_KEY_ID'),
          "secret_key": config('AWS_SECRET_ACCESS_KEY'),
          "bucket_name": config('AWS_STORAGE_BUCKET_NAME'),
          "endpoint_url": config('AWS_S3_ENDPOINT_URL'),
          'location': 'static',
          'default_acl': 'public-read',
        #   'custom_domain': config('AWS_S3_CUSTOM_DOMAIN'),
        },
    },
}

##################################3
INTERNAL_IPS = [
    "0.0.0.1",
]
#COMPRESS_ROOT = BASE_DIR / 'static'

#COMPRESS_ENABLED = True

#STATICFILES_FINDERS = ('compressor.finders.CompressorFinder',)

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
TIME_ZONE = 'Africa/Nairobi'
USE_TZ = True
#Email
MAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_POST = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER ='aga.imbali1@gmail.com'
EMAIL_HOST_PASSWORD ='oyqtbwumfqecasik'
REST_FRAMEWORK_PASSWORD_RESET = {
    'RESET_PASSWORD_TOKEN_LIFETIME': 60 * 60 * 24,  # 1 day (adjust as needed)
}
# JAZZMIN_SETTINGS = {
#     "show_ui_builder": True,
#     # "language_chooser":True,
#     "related_modal_active":True,
#     "site_logo": "images/download_2.png",
#      # Copyright on the footer
#     "copyright": "kingstone movies",
#      "topmenu_links": [

#         # Url that gets reversed (Permissions can be added)
#         {"name": "View Site",  "url": "/", "permissions": ["auth.view_user"]},

#         # external url that opens in a new window (Permissions can be added)
#         {"name": "Support", "url": "https://wa.me/254713934480", "new_window": True},

#         # model admin to link to (Permissions checked against model)
#         {"model": "auth.User"},

#         # App with dropdown menu to all its models pages (Permissions checked against models)
#         # {"app": "auth"},
#     ],
# }
REST_FRAMEWORK = {
    # 'DEFAULT_RENDERER_CLASSES': [
    #     'rest_framework.renderers.JSONRenderer',
    # ],
     'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 200,
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}
SIMPLE_JWT = {
'ACCESS_TOKEN_LIFETIME': timedelta(days=5),
'REFRESH_TOKEN_LIFETIME': timedelta(days=50),
'ROTATE_REFRESH_TOKENS': True,
'BLACKLIST_AFTER_ROTATION': True,
'UPDATE_LAST_LOGIN': False,
'ALGORITHM': 'HS256',
'VERIFYING_KEY': None,
'AUDIENCE': None,
'ISSUER': None,
'JWK_URL': None,
'LEEWAY': 0,
'AUTH_HEADER_TYPES': ('Bearer',),
'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
'USER_ID_FIELD': 'id',
'USER_ID_CLAIM': 'user_id',
'USER_AUTHENTICATION_RULE':
'rest_framework_simplejwt.authentication.default_user_authentication_rule',
'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
'TOKEN_TYPE_CLAIM': 'token_type',
'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',
'JTI_CLAIM': 'jti',
'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
'SLIDING_TOKEN_LIFETIME': timedelta(days=1),
'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}
CORS_ALLOW_ALL_ORIGINS = True
# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(days=1),  # Short-lived for reset
#     'SIGNING_KEY': SECRET_KEY,
#     'ALGORITHM': 'HS256',
# }
#>>>>>>> da16925992b75c91170aa75ab7f9de5194e936f8



